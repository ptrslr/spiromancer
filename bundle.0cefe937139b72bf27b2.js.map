{"version":3,"sources":["webpack:///bundle.0cefe937139b72bf27b2.js","webpack:///./src/sketch/index.js","webpack:///./src/index.js","webpack:///./src/sketch/epitrochoid.js","webpack:///./src/sketch/hypotrochoid.js","webpack:///./src/utils/counter.js","webpack:///./src/sketch/trochoid.js"],"names":["webpackJsonp","157","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","sketch","p5","gui","counter","width","height","controls","speed","trochoids","folders","addHypotrochoid","addEpitrochoid","save","saveCanvas","initControls","localStorage","JSON","parse","window","getItem","location","href","destroy","dat","GUI","remember","add","name","step","keys","Object","Counter","Math","max","apply","forEach","split","removeTrochoid","id","removeFolder","removedIndex","_lodash","findIndex","__rememberedObjects","item","splice","__rememberedObjectIndecesToControllers","addTrochoid","trochoid","folder","addFolder","controllers","push","addColor","controller","onFinishChange","clear","init","background","console","log","Hypotrochoid","generate","Epitrochoid","setup","frameRate","windowWidth","windowHeight","createCanvas","noFill","stroke","draw","key","angle","maxAngle","drawStep","guidesActive","image","guides","drawing","defineProperty","value","_dat","newObj","prototype","hasOwnProperty","call","_trochoid","_hypotrochoid","_hypotrochoid2","_epitrochoid","_epitrochoid2","_counter","_counter2","583","_p","_p2","_sketch","_sketch2","584","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_trochoid2","_Trochoid","_ref","_temp","_this","_ret","this","_len","arguments","args","_key","getPrototypeOf","concat","getX","undefined","_this2","R","r","d","cos","getY","_this3","sin","getDrawingCircleX","_this4","getDrawingCircleY","_this5","toString","index","Trochoid","585","586","93","_mathjs","_shortid","_shortid2","_initialiseProps","shortid","centerX","centerY","color","strokeWeight","createGraphics","displayDensity","rotations","getRotations","PI","Error","lcm","x","y","beginShape","curveVertex","endShape","oldX","oldY","newX","newY","line","fixedCircleWidth","drawingCircleWidth","drawingCircleX","drawingCircleY","ellipse","point","remove"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YA6BA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAIvF,QAASG,GAAmBC,GAAO,GAAIC,MAAMC,QAAQF,GAAM,CAAE,IAAK,GAAIG,GAAI,EAAGC,EAAOH,MAAMD,EAAIK,QAASF,EAAIH,EAAIK,OAAQF,IAAOC,EAAKD,GAAKH,EAAIG,EAAM,OAAOC,GAAe,MAAOH,OAAMK,KAAKN,GC7B1L,QAASO,GAAOC,GACd,GAAIC,GAAM,KACNC,SAIAC,EAAQ,IACRC,EAAS,IAEPC,GACJC,MAAO,EACPC,aACAC,WACAC,gBAJe,WAKbA,KAEFC,eAPe,WAQbA,KAEFC,KAVe,WAWbX,EAAGY,WAAW,aAAc,SAI1BC,EAAe,WAEnB,GAAMC,GAAeC,KAAKC,MACxBC,OAAOH,aAAaI,QAAWD,OAAOE,SAASC,KAA/C,SAGIZ,EAAUM,EAAeA,EAAaN,QAAU,IAGlDP,IACFA,EAAIoB,UAENpB,EAAM,GAAIqB,GAAIC,IACdtB,EAAIa,cAAe,EACnBb,EAAIuB,SAASnB,GAEbJ,EAAIE,MAAQ,IACZF,EAAIwB,IAAIpB,EAAU,QAAQqB,KAAK,UAC/BzB,EAAIwB,IAAIpB,EAAU,QAAS,EAAG,KAAKsB,KAAK,GACxC1B,EAAIwB,IAAIpB,EAAU,mBAAmBqB,KAAK,oBAC1CzB,EAAIwB,IAAIpB,EAAU,kBAAkBqB,KAAK,kBAEzC,IAAME,GAAOC,OAAOD,KAAKvB,EAASE,UAEhCL,GADE0B,EAAK/B,OACG,GAAIiC,WAAQC,KAAKC,IAALC,MAAAF,KAAAxC,EAAYqC,KAExB,GAAIE,WAKZtB,GACFqB,OAAOD,KAAKpB,GAAS0B,QAAQ,SAAAR,GAGd,gBAFAA,EAAKS,MAAM,KAAK,GAG3BzB,IAEAD,OAQF2B,EAAiB,SAACC,GACtB,GAAIpC,EAAK,CACPA,EAAIqC,aAAajC,EAASG,QAAQ6B,UAC3BhC,GAASG,QAAQ6B,SACjBhC,GAASE,UAAU8B,EAE1B,IAAME,IAAe,EAAAC,EAAAC,WACnBxC,EAAIyC,oBACJ,SAAAC,GAAA,MAAQA,GAAKN,KAAOA,GAIlBE,KACFtC,EAAIyC,oBAAoBE,OAAOL,EAAc,GAC7CtC,EAAI4C,uCAAuCD,OAAOL,EAAc,MAKhEO,EAAc,SAACC,GAAuB,GAClCV,GAAOU,EAAPV,EAGR,IAFAhC,EAASE,UAAU8B,GAAMU,EAErB9C,EAAK,CACPA,EAAIuB,SAASnB,EAASE,UAAU8B,GAEhC,IAAMW,GAAS/C,EAAIgD,UAAUF,EAC7B1C,GAASG,QAAQ6B,GAAMW,CAEvB,IAAME,KAENA,GAAYC,KACVH,EACGvB,IAAIpB,EAASE,UAAU8B,GAAK,IAAK,EAAG,KACpCV,KAAK,GACLD,KAAK,wBAEVwB,EAAYC,KACVH,EACGvB,IAAIpB,EAASE,UAAU8B,GAAK,IAAK,EAAG,KACpCV,KAAK,GACLD,KAAK,0BAEVwB,EAAYC,KACVH,EACGvB,IAAIpB,EAASE,UAAU8B,GAAK,IAAK,EAAG,KACpCV,KAAK,GACLD,KAAK,2BAEVwB,EAAYC,KACVH,EAAOI,SAAS/C,EAASE,UAAU8B,GAAK,SAASX,KAAK,UAExDwB,EAAYC,KACVH,EACGvB,IAAIpB,EAASE,UAAU8B,GAAK,eAAgB,EAAG,GAC/CV,KAAK,GACLD,KAAK,kBAGVwB,EAAYhB,QAAQ,SAAAmB,GAClBA,EAAWC,eAAe,WACxBP,EAASQ,QACTR,EAASS,WAIbR,EACGvB,IAAIsB,EAAU,gBACdrB,KAAK,UACL4B,eAAe,WACdtD,EAAGyD,WAAW,WAElBT,EAAOvB,IAAIsB,EAAU,UAAUrB,KAAK,UAEpCrB,EAASE,UAAU8B,GAAImB,OAGzBE,QAAQC,IAAI1D,IAGRQ,EAAkB,WACtBqC,EACE,GAAIc,WAAa1D,EAAQ2D,WAAY1D,EAAOC,EAAQJ,EAAIoC,KAItD1B,EAAiB,WACrBoC,EACE,GAAIgB,WAAY5D,EAAQ2D,WAAY1D,EAAOC,EAAQJ,EAAIoC,IAI3DpC,GAAG+D,MAAQ,WACT/D,EAAGgE,UAAU,KACb7D,EAAQH,EAAGiE,YACX7D,EAASJ,EAAGkE,aAEZlE,EAAGmE,aAAahE,EAAOC,GAEvBJ,EAAGyD,WArKmB,WAsKtBzD,EAAGoE,OAAO,GACVpE,EAAGqE,OAtKe,WAwKlBxD,KAGFb,EAAGsE,KAAO,WACRtE,EAAGyD,WAAW,SAEd5B,OAAOD,KAAKvB,EAASE,WAAW2B,QAAQ,SAAAqC,GACtC,GAAMxB,GAAW1C,EAASE,UAAUgE,EAEpC,IAAIxB,EAASyB,OAASzB,EAAS0B,SAC7B,IAAK,GAAI9E,GAAI,EAAGA,EAAIU,EAASC,MAAOX,IAClCoD,EAAS2B,UAIT3B,GAAS4B,cACX3E,EAAG4E,MAAM7B,EAAS8B,OAAQ,EAAG,EAAG1E,EAAOC,GAEzCJ,EAAG4E,MAAM7B,EAAS+B,QAAS,EAAG,EAAG3E,EAAOC,MDhM9CyB,OAAOkD,eAAe9F,EAAS,cAC7B+F,OAAO,GCRT,IAAAC,GAAA/F,EAAA,KAAYoC,EDmCZ,SAAiClC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,MAAOD,EAAc,IAAI8F,KAAa,IAAW,MAAP9F,EAAe,IAAK,GAAImF,KAAOnF,GAAWyC,OAAOsD,UAAUC,eAAeC,KAAKjG,EAAKmF,KAAMW,EAAOX,GAAOnF,EAAImF,GAAgC,OAAtBW,GAAO5F,QAAUF,EAAY8F,GAtBhOD,GCZlCzC,EAAAtD,EAAA,KAEAoG,EAAApG,EAAA,IACAqG,GDeiBpG,EAAuBmG,GCfxCpG,EAAA,MDmBIsG,EAAiBrG,EAAuBoG,GClB5CE,EAAAvG,EAAA,KDsBIwG,EAAgBvG,EAAuBsG,GCrB3CE,EAAAzG,EAAA,KDyBI0G,EAAYzG,EAAuBwG,EA6KvC1G,GAAQK,QCAOS,GDIT8F,IACA,SAAU7G,EAAQC,EAASC,GAEjC,YAaA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GEjOvF,GAAA0G,GAAA5G,EAAA,IFyNI6G,EAAM5G,EAAuB2G,EExNjC5G,GAAA,IAEA,IAAA8G,GAAA9G,EAAA,KF4NI+G,EAAW9G,EAAuB6G,EE1NtC,IAAIhG,WAAGD,YFkODmG,IACA,SAAUlH,EAAQC,EAASC,GAEjC,YAaA,SAASiH,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMnB,GAAQ,IAAKmB,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOpB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BmB,EAAPnB,EAElO,QAASqB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIN,WAAU,iEAAoEM,GAAeD,GAASxB,UAAYtD,OAAOgF,OAAOD,GAAcA,EAAWzB,WAAa2B,aAAe9B,MAAO2B,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeL,IAAY/E,OAAOqF,eAAiBrF,OAAOqF,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAdje/E,OAAOkD,eAAe9F,EAAS,cAC7B+F,OAAO,GG7OT,IAAAM,GAAApG,EAAA,IHkPIkI,EAEJ,SAAgChI,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAF/CkG,GGhPlCxB,EH0PY,SAAUuD,GAG1B,QAASvD,KACP,GAAIwD,GAEAC,EAAOC,EAAOC,CAElBtB,GAAgBuB,KAAM5D,EAEtB,KAAK,GAAI6D,GAAOC,UAAU/H,OAAQgI,EAAOpI,MAAMkI,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC3ED,EAAKC,GAAQF,UAAUE,EAGzB,OAAeP,GAASC,EAAQjB,EAA2BmB,MAAOJ,EAAOxD,EAAYqD,WAAatF,OAAOkG,eAAejE,IAAcuB,KAAKpD,MAAMqF,GAAOI,MAAMM,OAAOH,KAAiBL,EGvQxLS,KAAO,WAAyC,GAAxCzD,GAAwCoD,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAAvBJ,EAAKhD,MAAkB2D,EAAAX,EACtCY,EADsCD,EACtCC,EAAGC,EADmCF,EACnCE,EAAGC,EADgCH,EAChCG,CAKd,QAFGF,EAAIC,GAAKtG,KAAKwG,IAAI/D,GAAS8D,EAAIvG,KAAKwG,KAAKH,EAAIC,GAAKA,EAAI7D,IH8QtDgD,EGzQLgB,KAAO,WAAyC,GAAxChE,GAAwCoD,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAAvBJ,EAAKhD,MAAkBiE,EAAAjB,EACtCY,EADsCK,EACtCL,EAAGC,EADmCI,EACnCJ,EAAGC,EADgCG,EAChCH,CAKd,QAFGF,EAAIC,GAAKtG,KAAK2G,IAAIlE,GAAS8D,EAAIvG,KAAK2G,KAAKN,EAAIC,GAAKA,EAAI7D,IHgRtDgD,EG3QLmB,kBAAoB,WAAc,GAAAC,GAAApB,CAIhC,QAJgCoB,EACxBR,EADwBQ,EACrBP,GACctG,KAAKwG,IAAIf,EAAKhD,QHiRpCgD,EG5QLqB,kBAAoB,WAAc,GAAAC,GAAAtB,CAIhC,QAJgCsB,EACxBV,EADwBU,EACrBT,GACctG,KAAK2G,IAAIlB,EAAKhD,QHkRpCgD,EG7QLuB,SAAW,iBAASvB,GAAKwB,MAAQ,EAAtB,iBHuOFvB,EAwCJF,EAAQhB,EAA2BiB,EAAOC,GAG/C,MAxDAf,GAAU5C,EAAauD,GAwDhBvD,GGnTiBmF,UHsT1BhK,GAAQK,QGlROwE,GHsRToF,IACA,SAAUlK,EAAQC,EAASC,GAEjC,YAaA,SAASiH,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMnB,GAAQ,IAAKmB,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOpB,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BmB,EAAPnB,EAElO,QAASqB,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIN,WAAU,iEAAoEM,GAAeD,GAASxB,UAAYtD,OAAOgF,OAAOD,GAAcA,EAAWzB,WAAa2B,aAAe9B,MAAO2B,EAAUI,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeL,IAAY/E,OAAOqF,eAAiBrF,OAAOqF,eAAeP,EAAUC,GAAcD,EAASQ,UAAYP,GAdje/E,OAAOkD,eAAe9F,EAAS,cAC7B+F,OAAO,GInUT,IAAAM,GAAApG,EAAA,IJwUIkI,EAEJ,SAAgChI,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAF/CkG,GItUlC1B,EJgVa,SAAUyD,GAG3B,QAASzD,KACP,GAAI0D,GAEAC,EAAOC,EAAOC,CAElBtB,GAAgBuB,KAAM9D,EAEtB,KAAK,GAAI+D,GAAOC,UAAU/H,OAAQgI,EAAOpI,MAAMkI,GAAOG,EAAO,EAAGA,EAAOH,EAAMG,IAC3ED,EAAKC,GAAQF,UAAUE,EAGzB,OAAeP,GAASC,EAAQjB,EAA2BmB,MAAOJ,EAAO1D,EAAauD,WAAatF,OAAOkG,eAAenE,IAAeyB,KAAKpD,MAAMqF,GAAOI,MAAMM,OAAOH,KAAiBL,EI7V1LS,KAAO,WAAyC,GAAxCzD,GAAwCoD,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAAvBJ,EAAKhD,MAAkB2D,EAAAX,EACtCY,EADsCD,EACtCC,EAAGC,EADmCF,EACnCE,EAAGC,EADgCH,EAChCG,CAKd,QAFGF,EAAIC,GAAKtG,KAAKwG,IAAI/D,GAAS8D,EAAIvG,KAAKwG,KAAKH,EAAIC,GAAKA,EAAI7D,IJoWtDgD,EI/VLgB,KAAO,WAAyC,GAAxChE,GAAwCoD,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAAvBJ,EAAKhD,MAAkBiE,EAAAjB,EACtCY,EADsCK,EACtCL,EAAGC,EADmCI,EACnCJ,EAAGC,EADgCG,EAChCH,CAKd,QAFGF,EAAIC,GAAKtG,KAAK2G,IAAIlE,GAAS8D,EAAIvG,KAAK2G,KAAKN,EAAIC,GAAKA,EAAI7D,IJsWtDgD,EIjWLmB,kBAAoB,WAAc,GAAAC,GAAApB,CAIhC,QAJgCoB,EACxBR,EADwBQ,EACrBP,GACctG,KAAKwG,IAAIf,EAAKhD,QJuWpCgD,EIlWLqB,kBAAoB,WAAc,GAAAC,GAAAtB,CAIhC,QAJgCsB,EACxBV,EADwBU,EACrBT,GACctG,KAAK2G,IAAIlB,EAAKhD,QJwWpCgD,EInWLuB,SAAW,iBAASvB,GAAKwB,MAAQ,EAAtB,kBJ6TFvB,EAwCJF,EAAQhB,EAA2BiB,EAAOC,GAG/C,MAxDAf,GAAU9C,EAAcyD,GAwDjBzD,GIzYkBqF,UJ4Y3BhK,GAAQK,QIxWOsE,GJ4WTuF,IACA,SAAUnK,EAAQC,EAASC,GAEjC,YAOA,SAASiH,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAJhHzE,OAAOkD,eAAe9F,EAAS,cAC7B+F,OAAO,GAKT,IK/ZMlD,GAGJ,QAAAA,KAAiC,GAAA0F,GAAAE,KAArBxH,EAAqB0H,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAAH,CAAGzB,GAAAuB,KAAA5F,GAAA4F,KAIjC7D,SAAW,iBAAM2D,GAAKtH,WAHpBwH,KAAKxH,QAAUA,ELyanBjB,GAAQK,QKnaOwC,GLuaTsH,GACA,SAAUpK,EAAQC,EAASC,GAEjC,YAeA,SAASiH,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAZhHzE,OAAOkD,eAAe9F,EAAS,cAC7B+F,OAAO,GMvbT,IAAAqE,GAAAnK,EAAA,KACAoK,EAAApK,EAAA,KN6bIqK,EAEJ,SAAgCnK,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,IAFhDkK,GMzbjCL,EAqBJ,QAAAA,GACED,EACA7I,EACAC,EACAJ,EACAoC,GAIA,GAHAgG,GAGAR,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAHY,IACZS,EAEAT,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GAFY,GACZU,EACAV,UAAA/H,OAAA,OAAAqI,KAAAN,UAAA,GAAAA,UAAA,GADY,EACZzB,GAAAuB,KAAAuB,GAAAO,EAAAnE,KAAAqC,MACAA,KAAKrF,GAAKoH,UAAQ5F,WAClB6D,KAAKsB,MAAQA,EACbtB,KAAKvH,MAAQA,EACbuH,KAAKtH,OAASA,EACdsH,KAAK1H,GAAKA,EACV0H,KAAKtF,eAAiBA,EACtBsF,KAAKU,EAAIA,EACTV,KAAKW,EAAIA,EACTX,KAAKY,EAAIA,EAETZ,KAAK/C,cAAe,EAEpB+C,KAAKgC,QAAUvJ,EAAQ,EACvBuH,KAAKiC,QAAUvJ,EAAS,EAExBsH,KAAKkC,MAAQ,UACblC,KAAKmC,aAAe,EACpBnC,KAAK5C,QAAU9E,EAAG8J,eAChB3J,EAAQH,EAAG+J,iBACX3J,EAASJ,EAAG+J,kBAEdrC,KAAK5C,QAAQT,OAAOqD,KAAKkC,OACzBlC,KAAK5C,QAAQ+E,aAAanC,KAAKmC,cAE/BnC,KAAK7C,OAAS7E,EAAG8J,eACf3J,EAAQH,EAAG+J,iBACX3J,EAASJ,EAAG+J,kBAEdrC,KAAK7C,OAAOT,SACZsD,KAAK7C,OAAOR,OAAO,SACnBqD,KAAK7C,OAAOgF,aAAa,GAEzBnC,KAAKlE,QN8aLgG,EAAmB,WACrB,GAAIhC,GAAQE,IAEZA,MM9aAnE,MAAQ,WACNiE,EAAK1C,QAAQvB,QACbiE,EAAK3C,OAAOtB,SNibdmE,KM9aAlE,KAAO,WACLgE,EAAKhD,MAAQ,CACb,IAAMwF,GAAYxC,EAAKyC,cACvBzC,GAAK/C,SAAqB,EAAV1C,KAAKmI,GAASF,EAE9BxC,EAAK1C,QAAQT,OAAOmD,EAAKoC,OACzBpC,EAAK1C,QAAQ+E,aAAarC,EAAKqC,eNibjCnC,KM7aAO,KAAO,SAACzD,GACN,KAAM,IAAI2F,OAAM,2CNgblBzC,KM5aAc,KAAO,SAAChE,GACN,KAAM,IAAI2F,OAAM,2CN+alBzC,KM5aAiB,kBAAoB,WAClB,KAAM,IAAIwB,OAAM,2CN+alBzC,KM5aAmB,kBAAoB,WAClB,KAAM,IAAIsB,OAAM,2CN+alBzC,KM5aAuC,aAAe,kBAAM,EAAAZ,EAAAe,KAAI5C,EAAKY,EAAGZ,EAAKa,GAAKb,EAAKY,GNgbhDV,KM9aApD,KAAO,WAEL,GAAI+F,UAAGC,SACCnK,EAA4BqH,EAA5BrH,MAAOC,EAAqBoH,EAArBpH,OAAQqE,EAAa+C,EAAb/C,QAEvB+C,GAAK1C,QAAQvB,QACbiE,EAAK1C,QAAQT,OAAOmD,EAAKoC,OACzBpC,EAAK1C,QAAQ+E,aAAarC,EAAKqC,cAC/BrC,EAAK1C,QAAQyF,YACb,KAAK,GAAI/F,GAAQ,EAAGA,EAAQC,EAAUD,GA/G7B,IAiHP6F,EAAI7C,EAAKS,KAAKzD,GACd8F,EAAI9C,EAAKgB,KAAKhE,GAEdgD,EAAK1C,QAAQ0F,YAAYrK,EAAQ,EAAIkK,EAAGjK,EAAS,EAAIkK,EAIvD9C,GAAK1C,QAAQ2F,YNqbf/C,KMlbAhD,SAAW,WAAM,GACPgF,GAAqClC,EAArCkC,QAASC,EAA4BnC,EAA5BmC,QAASlF,EAAmB+C,EAAnB/C,SAAU2D,EAASZ,EAATY,EAAGC,EAAMb,EAANa,CAMvC,IAJmB,IAAfb,EAAKhD,OACPgD,EAAK1C,QAAQvB,QAGXiE,EAAKhD,OAASC,EAAU,CAC1B,GAAMiG,GAAOhB,EAAUlC,EAAKS,KAAKT,EAAKhD,OAChCmG,EAAOhB,EAAUnC,EAAKgB,KAAKhB,EAAKhD,MAEtCgD,GAAKhD,OAtIE,GAwIP,IAAMoG,GAAOlB,EAAUlC,EAAKS,KAAKT,EAAKhD,OAChCqG,EAAOlB,EAAUnC,EAAKgB,KAAKhB,EAAKhD,MAEtCgD,GAAK1C,QAAQgG,KAAKJ,EAAMC,EAAMC,EAAMC,GAEpCrD,EAAK3C,OAAOtB,OAEZ,IAAMwH,GAAuB,EAAJ3C,EACnB4C,EAAyB,EAAJ3C,EAErB4C,EAAiBvB,EAAUlC,EAAKmB,oBAChCuC,EAAiBvB,EAAUnC,EAAKqB,mBAEtCrB,GAAK3C,OAAOgF,aAAa,GACzBrC,EAAK3C,OAAOR,OAAO,SACnBmD,EAAK3C,OAAOsG,QAAQzB,EAASC,EAASoB,GACtCvD,EAAK3C,OAAOsG,QAAQF,EAAgBC,EAAgBF,GACpDxD,EAAK3C,OAAOiG,KAAKG,EAAgBC,EAAgBN,EAAMC,GAEvDrD,EAAK3C,OAAOgF,aAAa,IACzBrC,EAAK3C,OAAOR,OAAOmD,EAAKoC,OACxBpC,EAAK3C,OAAOuG,MAAMR,EAAMC,KN2b5BnD,KMvbA2D,OAAS,WACP7D,EAAKpF,eAAeoF,EAAKnF,KN2b7BpD,GAAQK,QMvbO2J,KN2bZ","file":"bundle.0cefe937139b72bf27b2.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 157:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _dat = __webpack_require__(159);\n\nvar dat = _interopRequireWildcard(_dat);\n\nvar _lodash = __webpack_require__(164);\n\nvar _trochoid = __webpack_require__(93);\n\nvar _trochoid2 = _interopRequireDefault(_trochoid);\n\nvar _hypotrochoid = __webpack_require__(585);\n\nvar _hypotrochoid2 = _interopRequireDefault(_hypotrochoid);\n\nvar _epitrochoid = __webpack_require__(584);\n\nvar _epitrochoid2 = _interopRequireDefault(_epitrochoid);\n\nvar _counter = __webpack_require__(586);\n\nvar _counter2 = _interopRequireDefault(_counter);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction sketch(p5) {\n  var gui = null;\n  var counter = void 0;\n\n  var backgroundColor = '#ffffff';\n  var strokeColor = '#19191a';\n  var width = 320;\n  var height = 320;\n\n  var controls = {\n    speed: 1,\n    trochoids: {},\n    folders: {},\n    addHypotrochoid: function addHypotrochoid() {\n      _addHypotrochoid();\n    },\n    addEpitrochoid: function addEpitrochoid() {\n      _addEpitrochoid();\n    },\n    save: function save() {\n      p5.saveCanvas('spirograph', 'png');\n    }\n  };\n\n  var initControls = function initControls() {\n    // console.log(window.localStorage.getItem(`${window.location.href}.gui`));\n    var localStorage = JSON.parse(window.localStorage.getItem(window.location.href + '.gui'));\n\n    var folders = localStorage ? localStorage.folders : null;\n    // console.log(folders);\n\n    if (gui) {\n      gui.destroy();\n    }\n    gui = new dat.GUI();\n    gui.localStorage = true;\n    gui.remember(controls);\n    // gui.remember(controls.trochoids);\n    gui.width = 360;\n    gui.add(controls, 'save').name('Export');\n    gui.add(controls, 'speed', 1, 200).step(1);\n    gui.add(controls, 'addHypotrochoid').name('Add hypotrochoid');\n    gui.add(controls, 'addEpitrochoid').name('Add epitrochoid');\n\n    var keys = Object.keys(controls.trochoids);\n    if (keys.length) {\n      counter = new _counter2.default(Math.max.apply(Math, _toConsumableArray(keys)));\n    } else {\n      counter = new _counter2.default();\n    }\n\n    // console.log(gui);\n\n    if (folders) {\n      Object.keys(folders).forEach(function (name) {\n        var type = name.split(' ')[1];\n\n        if (type === 'Epitrochoid') {\n          _addEpitrochoid();\n        } else {\n          _addHypotrochoid();\n        }\n      });\n    }\n    // addHypotrochoid();\n    // addEpitrochoid();\n  };\n\n  var removeTrochoid = function removeTrochoid(id) {\n    if (gui) {\n      gui.removeFolder(controls.folders[id]);\n      delete controls.folders[id];\n      delete controls.trochoids[id];\n\n      var removedIndex = (0, _lodash.findIndex)(gui.__rememberedObjects, function (item) {\n        return item.id === id;\n      });\n\n      // not ideal, but it's something\n      if (removedIndex) {\n        gui.__rememberedObjects.splice(removedIndex, 1);\n        gui.__rememberedObjectIndecesToControllers.splice(removedIndex, 1);\n      }\n    }\n  };\n\n  var addTrochoid = function addTrochoid(trochoid) {\n    var id = trochoid.id;\n\n    controls.trochoids[id] = trochoid;\n\n    if (gui) {\n      gui.remember(controls.trochoids[id]);\n\n      var folder = gui.addFolder(trochoid);\n      controls.folders[id] = folder;\n\n      var controllers = [];\n\n      controllers.push(folder.add(controls.trochoids[id], 'R', 1, 320).step(1).name('Fixed circle radius'));\n      controllers.push(folder.add(controls.trochoids[id], 'r', 1, 320).step(1).name('Drawing circle radius'));\n      controllers.push(folder.add(controls.trochoids[id], 'd', 1, 320).step(1).name('Drawing point distance'));\n      controllers.push(folder.addColor(controls.trochoids[id], 'color').name('Color'));\n      controllers.push(folder.add(controls.trochoids[id], 'strokeWeight', 1, 5).step(1).name('Stroke weight'));\n\n      controllers.forEach(function (controller) {\n        controller.onFinishChange(function () {\n          trochoid.clear();\n          trochoid.init();\n        });\n      });\n\n      folder.add(trochoid, 'guidesActive').name('Guides').onFinishChange(function () {\n        p5.background('white');\n      });\n      folder.add(trochoid, 'remove').name('Remove');\n\n      controls.trochoids[id].init();\n    }\n\n    console.log(gui);\n  };\n\n  var _addHypotrochoid = function _addHypotrochoid() {\n    addTrochoid(new _hypotrochoid2.default(counter.generate(), width, height, p5, removeTrochoid));\n  };\n\n  var _addEpitrochoid = function _addEpitrochoid() {\n    addTrochoid(new _epitrochoid2.default(counter.generate(), width, height, p5, removeTrochoid));\n  };\n\n  p5.setup = function () {\n    p5.frameRate(320);\n    width = p5.windowWidth;\n    height = p5.windowHeight;\n\n    p5.createCanvas(width, height);\n\n    p5.background(backgroundColor);\n    p5.noFill(0);\n    p5.stroke(strokeColor);\n\n    initControls();\n  };\n\n  p5.draw = function () {\n    p5.background('white');\n\n    Object.keys(controls.trochoids).forEach(function (key) {\n      var trochoid = controls.trochoids[key];\n\n      if (trochoid.angle <= trochoid.maxAngle) {\n        for (var i = 0; i < controls.speed; i++) {\n          trochoid.drawStep();\n        }\n      }\n\n      if (trochoid.guidesActive) {\n        p5.image(trochoid.guides, 0, 0, width, height);\n      }\n      p5.image(trochoid.drawing, 0, 0, width, height);\n    });\n  };\n}\n\nexports.default = sketch;\n\n/***/ }),\n\n/***/ 583:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _p = __webpack_require__(94);\n\nvar _p2 = _interopRequireDefault(_p);\n\n__webpack_require__(156);\n\nvar _sketch = __webpack_require__(157);\n\nvar _sketch2 = _interopRequireDefault(_sketch);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nnew _p2.default(_sketch2.default);\n\n/***/ }),\n\n/***/ 584:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trochoid = __webpack_require__(93);\n\nvar _trochoid2 = _interopRequireDefault(_trochoid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Epitrochoid = function (_Trochoid) {\n  _inherits(Epitrochoid, _Trochoid);\n\n  function Epitrochoid() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Epitrochoid);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Epitrochoid.__proto__ || Object.getPrototypeOf(Epitrochoid)).call.apply(_ref, [this].concat(args))), _this), _this.getX = function () {\n      var angle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.angle;\n      var _this2 = _this,\n          R = _this2.R,\n          r = _this2.r,\n          d = _this2.d;\n\n\n      var result = (R + r) * Math.cos(angle) - d * Math.cos((R + r) / r * angle);\n\n      return result;\n    }, _this.getY = function () {\n      var angle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.angle;\n      var _this3 = _this,\n          R = _this3.R,\n          r = _this3.r,\n          d = _this3.d;\n\n\n      var result = (R + r) * Math.sin(angle) - d * Math.sin((R + r) / r * angle);\n\n      return result;\n    }, _this.getDrawingCircleX = function () {\n      var _this4 = _this,\n          R = _this4.R,\n          r = _this4.r;\n\n      var result = (R + r) * Math.cos(_this.angle);\n\n      return result;\n    }, _this.getDrawingCircleY = function () {\n      var _this5 = _this,\n          R = _this5.R,\n          r = _this5.r;\n\n      var result = (R + r) * Math.sin(_this.angle);\n\n      return result;\n    }, _this.toString = function () {\n      return _this.index + 1 + ': Epitrochoid';\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return Epitrochoid;\n}(_trochoid2.default);\n\nexports.default = Epitrochoid;\n\n/***/ }),\n\n/***/ 585:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trochoid = __webpack_require__(93);\n\nvar _trochoid2 = _interopRequireDefault(_trochoid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Hypotrochoid = function (_Trochoid) {\n  _inherits(Hypotrochoid, _Trochoid);\n\n  function Hypotrochoid() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Hypotrochoid);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Hypotrochoid.__proto__ || Object.getPrototypeOf(Hypotrochoid)).call.apply(_ref, [this].concat(args))), _this), _this.getX = function () {\n      var angle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.angle;\n      var _this2 = _this,\n          R = _this2.R,\n          r = _this2.r,\n          d = _this2.d;\n\n\n      var result = (R - r) * Math.cos(angle) + d * Math.cos((R - r) / r * angle);\n\n      return result;\n    }, _this.getY = function () {\n      var angle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.angle;\n      var _this3 = _this,\n          R = _this3.R,\n          r = _this3.r,\n          d = _this3.d;\n\n\n      var result = (R - r) * Math.sin(angle) - d * Math.sin((R - r) / r * angle);\n\n      return result;\n    }, _this.getDrawingCircleX = function () {\n      var _this4 = _this,\n          R = _this4.R,\n          r = _this4.r;\n\n      var result = (R - r) * Math.cos(_this.angle);\n\n      return result;\n    }, _this.getDrawingCircleY = function () {\n      var _this5 = _this,\n          R = _this5.R,\n          r = _this5.r;\n\n      var result = (R - r) * Math.sin(_this.angle);\n\n      return result;\n    }, _this.toString = function () {\n      return _this.index + 1 + ': Hypotrochoid';\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return Hypotrochoid;\n}(_trochoid2.default);\n\nexports.default = Hypotrochoid;\n\n/***/ }),\n\n/***/ 586:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Counter = function Counter() {\n  var _this = this;\n\n  var counter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n  _classCallCheck(this, Counter);\n\n  this.generate = function () {\n    return _this.counter++;\n  };\n\n  this.counter = counter;\n};\n\nexports.default = Counter;\n\n/***/ }),\n\n/***/ 93:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mathjs = __webpack_require__(166);\n\nvar _shortid = __webpack_require__(572);\n\nvar _shortid2 = _interopRequireDefault(_shortid);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar step = 0.05;\n\nvar Trochoid = function Trochoid(index, width, height, p5, removeTrochoid) {\n  var R = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 210;\n  var r = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 75;\n  var d = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 45;\n\n  _classCallCheck(this, Trochoid);\n\n  _initialiseProps.call(this);\n\n  this.id = _shortid2.default.generate();\n  this.index = index;\n  this.width = width;\n  this.height = height;\n  this.p5 = p5;\n  this.removeTrochoid = removeTrochoid;\n  this.R = R;\n  this.r = r;\n  this.d = d;\n\n  this.guidesActive = true;\n\n  this.centerX = width / 2;\n  this.centerY = height / 2;\n\n  this.color = '#00FFFF';\n  this.strokeWeight = 1;\n  this.drawing = p5.createGraphics(width * p5.displayDensity(), height * p5.displayDensity());\n  this.drawing.stroke(this.color);\n  this.drawing.strokeWeight(this.strokeWeight);\n\n  this.guides = p5.createGraphics(width * p5.displayDensity(), height * p5.displayDensity());\n  this.guides.noFill();\n  this.guides.stroke('black');\n  this.guides.strokeWeight(1);\n\n  this.init();\n}\n\n// eslint-disable-next-line no-unused-vars\n\n\n// eslint-disable-next-line no-unused-vars\n;\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.clear = function () {\n    _this.drawing.clear();\n    _this.guides.clear();\n  };\n\n  this.init = function () {\n    _this.angle = 0;\n    var rotations = _this.getRotations();\n    _this.maxAngle = Math.PI * 2 * rotations;\n\n    _this.drawing.stroke(_this.color);\n    _this.drawing.strokeWeight(_this.strokeWeight);\n  };\n\n  this.getX = function (angle) {\n    throw new Error('You have to implement the method getX!');\n  };\n\n  this.getY = function (angle) {\n    throw new Error('You have to implement the method getY!');\n  };\n\n  this.getDrawingCircleX = function () {\n    throw new Error('You have to implement the method getX!');\n  };\n\n  this.getDrawingCircleY = function () {\n    throw new Error('You have to implement the method getY!');\n  };\n\n  this.getRotations = function () {\n    return (0, _mathjs.lcm)(_this.R, _this.r) / _this.R;\n  };\n\n  this.draw = function () {\n    // let angle = 0;\n    var x = void 0,\n        y = void 0;\n    var width = _this.width,\n        height = _this.height,\n        maxAngle = _this.maxAngle;\n\n\n    _this.drawing.clear();\n    _this.drawing.stroke(_this.color);\n    _this.drawing.strokeWeight(_this.strokeWeight);\n    _this.drawing.beginShape();\n    for (var angle = 0; angle < maxAngle; angle += step) {\n      // console.log(`${angle} -> ${angleRad}`);\n      x = _this.getX(angle);\n      y = _this.getY(angle);\n\n      _this.drawing.curveVertex(width / 2 + x, height / 2 + y);\n\n      // angle += theta;\n    }\n    _this.drawing.endShape();\n  };\n\n  this.drawStep = function () {\n    var centerX = _this.centerX,\n        centerY = _this.centerY,\n        maxAngle = _this.maxAngle,\n        R = _this.R,\n        r = _this.r;\n\n\n    if (_this.angle === 0) {\n      _this.drawing.clear();\n    }\n\n    if (_this.angle <= maxAngle) {\n      var oldX = centerX + _this.getX(_this.angle);\n      var oldY = centerY + _this.getY(_this.angle);\n\n      _this.angle += step;\n\n      var newX = centerX + _this.getX(_this.angle);\n      var newY = centerY + _this.getY(_this.angle);\n\n      _this.drawing.line(oldX, oldY, newX, newY);\n\n      _this.guides.clear();\n\n      var fixedCircleWidth = R * 2;\n      var drawingCircleWidth = r * 2;\n\n      var drawingCircleX = centerX + _this.getDrawingCircleX();\n      var drawingCircleY = centerY + _this.getDrawingCircleY();\n\n      _this.guides.strokeWeight(1);\n      _this.guides.stroke('black');\n      _this.guides.ellipse(centerX, centerY, fixedCircleWidth);\n      _this.guides.ellipse(drawingCircleX, drawingCircleY, drawingCircleWidth);\n      _this.guides.line(drawingCircleX, drawingCircleY, newX, newY);\n\n      _this.guides.strokeWeight(10);\n      _this.guides.stroke(_this.color);\n      _this.guides.point(newX, newY);\n    }\n  };\n\n  this.remove = function () {\n    _this.removeTrochoid(_this.id);\n  };\n};\n\nexports.default = Trochoid;\n\n/***/ })\n\n},[583]);\n\n\n// WEBPACK FOOTER //\n// bundle.0cefe937139b72bf27b2.js","// @flow\nimport * as dat from 'dat.gui';\nimport { findIndex } from 'lodash';\n\nimport Trochoid from './trochoid';\nimport Hypotrochoid from './hypotrochoid';\nimport Epitrochoid from './epitrochoid';\nimport Counter from '../utils/counter';\n\nfunction sketch(p5: Object) {\n  let gui = null;\n  let counter;\n\n  const backgroundColor = '#ffffff';\n  const strokeColor = '#19191a';\n  let width = 320;\n  let height = 320;\n\n  const controls = {\n    speed: 1,\n    trochoids: {},\n    folders: {},\n    addHypotrochoid() {\n      addHypotrochoid();\n    },\n    addEpitrochoid() {\n      addEpitrochoid();\n    },\n    save() {\n      p5.saveCanvas('spirograph', 'png');\n    },\n  };\n\n  const initControls = () => {\n    // console.log(window.localStorage.getItem(`${window.location.href}.gui`));\n    const localStorage = JSON.parse(\n      window.localStorage.getItem(`${window.location.href}.gui`),\n    );\n\n    const folders = localStorage ? localStorage.folders : null;\n    // console.log(folders);\n\n    if (gui) {\n      gui.destroy();\n    }\n    gui = new dat.GUI();\n    gui.localStorage = true;\n    gui.remember(controls);\n    // gui.remember(controls.trochoids);\n    gui.width = 360;\n    gui.add(controls, 'save').name('Export');\n    gui.add(controls, 'speed', 1, 200).step(1);\n    gui.add(controls, 'addHypotrochoid').name('Add hypotrochoid');\n    gui.add(controls, 'addEpitrochoid').name('Add epitrochoid');\n\n    const keys = Object.keys(controls.trochoids);\n    if (keys.length) {\n      counter = new Counter(Math.max(...keys));\n    } else {\n      counter = new Counter();\n    }\n\n    // console.log(gui);\n\n    if (folders) {\n      Object.keys(folders).forEach(name => {\n        const type = name.split(' ')[1];\n\n        if (type === 'Epitrochoid') {\n          addEpitrochoid();\n        } else {\n          addHypotrochoid();\n        }\n      });\n    }\n    // addHypotrochoid();\n    // addEpitrochoid();\n  };\n\n  const removeTrochoid = (id: number) => {\n    if (gui) {\n      gui.removeFolder(controls.folders[id]);\n      delete controls.folders[id];\n      delete controls.trochoids[id];\n\n      const removedIndex = findIndex(\n        gui.__rememberedObjects,\n        item => item.id === id,\n      );\n\n      // not ideal, but it's something\n      if (removedIndex) {\n        gui.__rememberedObjects.splice(removedIndex, 1);\n        gui.__rememberedObjectIndecesToControllers.splice(removedIndex, 1);\n      }\n    }\n  };\n\n  const addTrochoid = (trochoid: Trochoid) => {\n    const { id } = trochoid;\n    controls.trochoids[id] = trochoid;\n\n    if (gui) {\n      gui.remember(controls.trochoids[id]);\n\n      const folder = gui.addFolder(trochoid);\n      controls.folders[id] = folder;\n\n      const controllers = [];\n\n      controllers.push(\n        folder\n          .add(controls.trochoids[id], 'R', 1, 320)\n          .step(1)\n          .name('Fixed circle radius'),\n      );\n      controllers.push(\n        folder\n          .add(controls.trochoids[id], 'r', 1, 320)\n          .step(1)\n          .name('Drawing circle radius'),\n      );\n      controllers.push(\n        folder\n          .add(controls.trochoids[id], 'd', 1, 320)\n          .step(1)\n          .name('Drawing point distance'),\n      );\n      controllers.push(\n        folder.addColor(controls.trochoids[id], 'color').name('Color'),\n      );\n      controllers.push(\n        folder\n          .add(controls.trochoids[id], 'strokeWeight', 1, 5)\n          .step(1)\n          .name('Stroke weight'),\n      );\n\n      controllers.forEach(controller => {\n        controller.onFinishChange(() => {\n          trochoid.clear();\n          trochoid.init();\n        });\n      });\n\n      folder\n        .add(trochoid, 'guidesActive')\n        .name('Guides')\n        .onFinishChange(() => {\n          p5.background('white');\n        });\n      folder.add(trochoid, 'remove').name('Remove');\n\n      controls.trochoids[id].init();\n    }\n\n    console.log(gui);\n  };\n\n  const addHypotrochoid = () => {\n    addTrochoid(\n      new Hypotrochoid(counter.generate(), width, height, p5, removeTrochoid),\n    );\n  };\n\n  const addEpitrochoid = () => {\n    addTrochoid(\n      new Epitrochoid(counter.generate(), width, height, p5, removeTrochoid),\n    );\n  };\n\n  p5.setup = () => {\n    p5.frameRate(320);\n    width = p5.windowWidth;\n    height = p5.windowHeight;\n\n    p5.createCanvas(width, height);\n\n    p5.background(backgroundColor);\n    p5.noFill(0);\n    p5.stroke(strokeColor);\n\n    initControls();\n  };\n\n  p5.draw = () => {\n    p5.background('white');\n\n    Object.keys(controls.trochoids).forEach(key => {\n      const trochoid = controls.trochoids[key];\n\n      if (trochoid.angle <= trochoid.maxAngle) {\n        for (let i = 0; i < controls.speed; i++) {\n          trochoid.drawStep();\n        }\n      }\n\n      if (trochoid.guidesActive) {\n        p5.image(trochoid.guides, 0, 0, width, height);\n      }\n      p5.image(trochoid.drawing, 0, 0, width, height);\n    });\n  };\n}\n\nexport default sketch;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/index.js","import p5 from 'p5';\nimport 'p5/lib/addons/p5.dom';\n\nimport sketch from './sketch';\n\nnew p5(sketch);\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","// @flow\nimport Trochoid from './trochoid';\n\nclass Epitrochoid extends Trochoid {\n  getX = (angle?: number = this.angle): number => {\n    const { R, r, d } = this;\n\n    const result =\n      (R + r) * Math.cos(angle) - d * Math.cos((R + r) / r * angle);\n\n    return result;\n  };\n\n  getY = (angle?: number = this.angle): number => {\n    const { R, r, d } = this;\n\n    const result =\n      (R + r) * Math.sin(angle) - d * Math.sin((R + r) / r * angle);\n\n    return result;\n  };\n\n  getDrawingCircleX = (): number => {\n    const { R, r } = this;\n    const result = (R + r) * Math.cos(this.angle);\n\n    return result;\n  };\n\n  getDrawingCircleY = (): number => {\n    const { R, r } = this;\n    const result = (R + r) * Math.sin(this.angle);\n\n    return result;\n  };\n\n  toString = () => `${this.index + 1}: Epitrochoid`;\n}\n\nexport default Epitrochoid;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/epitrochoid.js","// @flow\nimport Trochoid from './trochoid';\n\nclass Hypotrochoid extends Trochoid {\n  getX = (angle?: number = this.angle): number => {\n    const { R, r, d } = this;\n\n    const result =\n      (R - r) * Math.cos(angle) + d * Math.cos((R - r) / r * angle);\n\n    return result;\n  };\n\n  getY = (angle?: number = this.angle): number => {\n    const { R, r, d } = this;\n\n    const result =\n      (R - r) * Math.sin(angle) - d * Math.sin((R - r) / r * angle);\n\n    return result;\n  };\n\n  getDrawingCircleX = (): number => {\n    const { R, r } = this;\n    const result = (R - r) * Math.cos(this.angle);\n\n    return result;\n  };\n\n  getDrawingCircleY = (): number => {\n    const { R, r } = this;\n    const result = (R - r) * Math.sin(this.angle);\n\n    return result;\n  };\n\n  toString = () => `${this.index + 1}: Hypotrochoid`;\n}\n\nexport default Hypotrochoid;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/hypotrochoid.js","class Counter {\n  counter: number;\n\n  constructor(counter: number = 0) {\n    this.counter = counter;\n  }\n\n  generate = () => this.counter++;\n}\n\nexport default Counter;\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/counter.js","// @flow\nimport { lcm } from 'mathjs';\nimport shortid from 'shortid';\n\nconst step = 0.05;\n\nclass Trochoid {\n  id: number;\n  index: number;\n  R: number;\n  r: number;\n  d: number;\n  width: number;\n  height: number;\n  p5: Object;\n  removeTrochoid: Function;\n  guidesActive: boolean;\n\n  centerX: number;\n  centerY: number;\n  drawing: Object;\n  guides: Object;\n  color: string;\n  strokeWeight: number;\n  angle: number;\n  maxAngle: number;\n\n  constructor(\n    index: number,\n    width: number,\n    height: number,\n    p5: Object,\n    removeTrochoid: Function,\n    R: number = 210,\n    r: number = 75,\n    d: number = 45,\n  ) {\n    this.id = shortid.generate();\n    this.index = index;\n    this.width = width;\n    this.height = height;\n    this.p5 = p5;\n    this.removeTrochoid = removeTrochoid;\n    this.R = R;\n    this.r = r;\n    this.d = d;\n\n    this.guidesActive = true;\n\n    this.centerX = width / 2;\n    this.centerY = height / 2;\n\n    this.color = '#00FFFF';\n    this.strokeWeight = 1;\n    this.drawing = p5.createGraphics(\n      width * p5.displayDensity(),\n      height * p5.displayDensity(),\n    );\n    this.drawing.stroke(this.color);\n    this.drawing.strokeWeight(this.strokeWeight);\n\n    this.guides = p5.createGraphics(\n      width * p5.displayDensity(),\n      height * p5.displayDensity(),\n    );\n    this.guides.noFill();\n    this.guides.stroke('black');\n    this.guides.strokeWeight(1);\n\n    this.init();\n  }\n\n  clear = () => {\n    this.drawing.clear();\n    this.guides.clear();\n  };\n\n  init = () => {\n    this.angle = 0;\n    const rotations = this.getRotations();\n    this.maxAngle = Math.PI * 2 * rotations;\n\n    this.drawing.stroke(this.color);\n    this.drawing.strokeWeight(this.strokeWeight);\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  getX = (angle?: number): ?number => {\n    throw new Error('You have to implement the method getX!');\n  };\n\n  // eslint-disable-next-line no-unused-vars\n  getY = (angle?: number): ?number => {\n    throw new Error('You have to implement the method getY!');\n  };\n\n  getDrawingCircleX = (): ?number => {\n    throw new Error('You have to implement the method getX!');\n  };\n\n  getDrawingCircleY = (): ?number => {\n    throw new Error('You have to implement the method getY!');\n  };\n\n  getRotations = () => lcm(this.R, this.r) / this.R;\n\n  draw = () => {\n    // let angle = 0;\n    let x, y;\n    const { width, height, maxAngle } = this;\n\n    this.drawing.clear();\n    this.drawing.stroke(this.color);\n    this.drawing.strokeWeight(this.strokeWeight);\n    this.drawing.beginShape();\n    for (let angle = 0; angle < maxAngle; angle += step) {\n      // console.log(`${angle} -> ${angleRad}`);\n      x = this.getX(angle);\n      y = this.getY(angle);\n\n      this.drawing.curveVertex(width / 2 + x, height / 2 + y);\n\n      // angle += theta;\n    }\n    this.drawing.endShape();\n  };\n\n  drawStep = () => {\n    const { centerX, centerY, maxAngle, R, r } = this;\n\n    if (this.angle === 0) {\n      this.drawing.clear();\n    }\n\n    if (this.angle <= maxAngle) {\n      const oldX = centerX + this.getX(this.angle);\n      const oldY = centerY + this.getY(this.angle);\n\n      this.angle += step;\n\n      const newX = centerX + this.getX(this.angle);\n      const newY = centerY + this.getY(this.angle);\n\n      this.drawing.line(oldX, oldY, newX, newY);\n\n      this.guides.clear();\n\n      const fixedCircleWidth = R * 2;\n      const drawingCircleWidth = r * 2;\n\n      const drawingCircleX = centerX + this.getDrawingCircleX();\n      const drawingCircleY = centerY + this.getDrawingCircleY();\n\n      this.guides.strokeWeight(1);\n      this.guides.stroke('black');\n      this.guides.ellipse(centerX, centerY, fixedCircleWidth);\n      this.guides.ellipse(drawingCircleX, drawingCircleY, drawingCircleWidth);\n      this.guides.line(drawingCircleX, drawingCircleY, newX, newY);\n\n      this.guides.strokeWeight(10);\n      this.guides.stroke(this.color);\n      this.guides.point(newX, newY);\n    }\n  };\n\n  remove = () => {\n    this.removeTrochoid(this.id);\n  };\n}\n\nexport default Trochoid;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sketch/trochoid.js"],"sourceRoot":""}